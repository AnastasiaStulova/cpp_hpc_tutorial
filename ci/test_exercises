#!/usr/bin/env sh
#
# Compile all inputs and solutions

set -e

compilers="nvc++ g++ clang++"
modes="release release-cpu debug"
stds="17 20"

# Topic 1: Heat equation
daxpy="topic1_heat/starting_point.cpp"
echo "${compilers}" | tr ' ' '\n' | while read compiler; do
    echo "${modes}" | tr ' ' '\n' | while read mode; do
	echo "${stds}" | tr ' ' '\n' | while read std; do	
	    echo "${daxpy}" | tr ' ' '\n' | while read file; do
		./ci/compile ${compiler} ${mode} 0 ${std} labs/${file}
		echo "./target/labs/${file} 2048 1024"
		./target/labs/${file} 2048 1024
	    done
	done
    done
done

# Topic 0: DAXPY: compile and run full solutions
files="topic0_daxpy/starting_point.cpp topic0_daxpy/solutions/exercise0.cpp topic0_daxpy/solutions/exercise0_indices.cpp topic0_daxpy/solutions/exercise1.cpp"
echo "${compilers}" | tr ' ' '\n' | while read compiler; do
    echo "${modes}" | tr ' ' '\n' | while read mode; do
	echo "${stds}" | tr ' ' '\n' | while read std; do	
	    echo "${files}" | tr ' ' '\n' | while read file; do
		./ci/compile ${compiler} ${mode} 0 ${std} labs/${file}
		echo "./target/labs/${file} 100"
		./target/labs/${file} 100
	    done
	done
    done
done

# Topic 0: DAXPY: compile partial solutions
files="topic0_daxpy/exercise0.cpp topic0_daxpy/exercise1.cpp"
echo "${compilers}" | tr ' ' '\n' | while read compiler; do
    echo "${modes}" | tr ' ' '\n' | while read mode; do
	echo "${stds}" | tr ' ' '\n' | while read std; do		
	    echo "${files}" | tr ' ' '\n' | while read file; do
		./ci/compile ${compiler} ${mode} 0 ${std} labs/${file}
	    done
	done
    done
done


# Topic 2: Tree
tree="topic2_tree/starting_point.cpp topic2_tree/solutions/exercise0.cpp topic2_tree/solutions/exercise0_gpu.cpp"
if [ ! -d topic2_dataset ]; then
    mkdir -p topic2_dataset
    (
	cd topic2_dataset
	./../labs/topic2_tree/books.sh
    )
fi
echo "${compilers}" | tr ' ' '\n' | while read compiler; do
    echo "${modes}" | tr ' ' '\n' | while read mode; do
	echo "${tree}" | tr ' ' '\n' | while read file; do
	    if [ "${mode}" = "release" ] || [ "${mode}" = "debug" ] && [ "${compiler}" = "nvc++" ] && [ "${file}" = "topic2_tree/solutions/exercise0.cpp" ] ; then
		continue
	    elif [ "${mode}" = "debug" ] && [ "${compiler}" = "nvc++" ] ; then
		continue		
	    elif [ "${compiler}" = "nvc++" ] && [ "${file}" = "topic2_tree/solutions/exercise0_gpu.cpp" ] ; then
		./ci/compile ${compiler} ${mode} 0 17 labs/${file}
		echo "./target/labs/${file}"
		cp ./target/labs/${file} topic2_dataset/tree_bin
		(
		    cd topic2_dataset
		    ./tree_bin
		)
	    else
		./ci/compile ${compiler} ${mode} 0 20 labs/${file}
		echo "./target/labs/${file}"
		cp ./target/labs/${file} topic2_dataset/tree_bin
		(
		    cd topic2_dataset
		    ./tree_bin
		)
	    fi
	done
    done
done

# Topic 2: Tree: compile partial solution
files="topic2_tree/exercise0.cpp"
echo "${compilers}" | tr ' ' '\n' | while read compiler; do
    echo "${modes}" | tr ' ' '\n' | while read mode; do
	echo "${files}" | tr ' ' '\n' | while read file; do
	    ./ci/compile ${compiler} ${mode} 0 20 labs/${file}
	done
    done
done
